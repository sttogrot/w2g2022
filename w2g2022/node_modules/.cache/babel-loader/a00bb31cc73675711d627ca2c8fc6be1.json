{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\w2g2022\\\\w2g2022\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ThemePicker from \"./ThemePicker\";\nimport ButtonContainer from \"./Buttoncontainer\";\nimport DarkmodeSettings from \"./imgs/DarkmodeSettings.png\";\nimport LightmodeSettings from \"./imgs/LightmodeSettings.png\";\nimport LightmodeSave from \"./imgs/LightmodeSave.png\";\nimport DarkmodeSave from \"./imgs/DarkmodeSave.png\";\nimport LightmodeRefresh from \"./imgs/LightmodeRefresh.png\";\nimport DarkmodeRefresh from \"./imgs/DarkmodeRefresh.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: {\n        userName: \"\",\n        userID: -1\n      },\n      users: {},\n      theme: \"Darkmode\",\n      loggedIn: false\n    };\n    this.replaceClasses = this.replaceClasses.bind(this); // This replaces the theme related classes\n    // of all affected elements with one specific theme class\n\n    document.body.style.backgroundColor = \"rgb(100, 100, 100)\";\n  }\n\n  changeTheme() {\n    this.props.replaceClasses(this.props.name);\n    document.body.style.background = this.backgrounds[this.props.name];\n    let containers = document.getElementsByClassName(\"container\");\n\n    for (let i = 0; i < containers.length; i++) {\n      let images = containers[i].getElementsByTagName(\"img\");\n      images[0].src = this.props.name === \"Darkmode\" || this.props.name === \"VisionMode\" ? DarkmodeSettings : LightmodeSettings;\n\n      if (images.length > 1) {\n        for (let n = 1; n < images.length; n++) {\n          if (images[n].alt === \"Save\") {\n            images[n].src = this.props.name === \"ColorblindMode\" ? \"\" : this.props.name === \"Darkmode\" || this.props.name === \"VisionMode\" ? DarkmodeSave : LightmodeSave;\n          } else if (images[n].alt === \"Refresh\") {\n            images[n].src = this.props.name === \"ColorblindMode\" ? \"\" : this.props.name === \"Darkmode\" || this.props.name === \"VisionMode\" ? DarkmodeRefresh : LightmodeRefresh;\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Darkmode\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonContainer, {\n        className: this.state.theme + \" Settings\",\n        children: [/*#__PURE__*/_jsxDEV(ThemePicker, {\n          currTheme: this.state.theme,\n          className: \"Button\",\n          replaceClasses: this.replaceClasses,\n          changeTheme: this.changeTheme,\n          name: \"Darkmode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemePicker, {\n          currTheme: this.state.theme,\n          className: \"Button\",\n          replaceClasses: this.replaceClasses,\n          changeTheme: this.changeTheme,\n          name: \"Lightmode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemePicker, {\n          currTheme: this.state.theme,\n          className: \"Button\",\n          replaceClasses: this.replaceClasses,\n          changeTheme: this.changeTheme,\n          name: \"ColorblindMode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemePicker, {\n          currTheme: this.state.theme,\n          className: \"Button\",\n          replaceClasses: this.replaceClasses,\n          changeTheme: this.changeTheme,\n          name: \"VisionMode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoMessage hidden\",\n        id: \"infoMessage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["logo","React","ThemePicker","ButtonContainer","DarkmodeSettings","LightmodeSettings","LightmodeSave","DarkmodeSave","LightmodeRefresh","DarkmodeRefresh","App","Component","constructor","props","state","currentUser","userName","userID","users","theme","loggedIn","replaceClasses","bind","document","body","style","backgroundColor","changeTheme","name","background","backgrounds","containers","getElementsByClassName","i","length","images","getElementsByTagName","src","n","alt","render"],"sources":["C:/Users/Tom/w2g2022/w2g2022/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ThemePicker from \"./ThemePicker\";\nimport ButtonContainer from \"./Buttoncontainer\"\nimport DarkmodeSettings from \"./imgs/DarkmodeSettings.png\";\nimport LightmodeSettings from \"./imgs/LightmodeSettings.png\";\nimport LightmodeSave from \"./imgs/LightmodeSave.png\";\nimport DarkmodeSave from \"./imgs/DarkmodeSave.png\";\nimport LightmodeRefresh from \"./imgs/LightmodeRefresh.png\";\nimport DarkmodeRefresh from \"./imgs/DarkmodeRefresh.png\";\n\n\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: {\n        userName: \"\",\n        userID: -1,\n      },\n      users: {},\n      theme: \"Darkmode\",\n      loggedIn: false,\n    };\n\n    \n    this.replaceClasses = this.replaceClasses.bind(this); // This replaces the theme related classes\n    // of all affected elements with one specific theme class\n    \n    document.body.style.backgroundColor = \"rgb(100, 100, 100)\";\n  }\n\n\n  changeTheme() {\n    this.props.replaceClasses(this.props.name);\n    document.body.style.background = this.backgrounds[this.props.name];\n    let containers = document.getElementsByClassName(\"container\");\n    for (let i = 0; i < containers.length; i++) {\n      let images = containers[i].getElementsByTagName(\"img\");\n      images[0].src =\n        this.props.name === \"Darkmode\" || this.props.name === \"VisionMode\"\n          ? DarkmodeSettings\n          : LightmodeSettings;\n      if (images.length > 1) {\n        for (let n = 1; n < images.length; n++) {\n          if (images[n].alt === \"Save\") {\n            images[n].src =\n              this.props.name === \"ColorblindMode\"\n                ? \"\"\n                : this.props.name === \"Darkmode\" ||\n                  this.props.name === \"VisionMode\"\n                  ? DarkmodeSave\n                  : LightmodeSave;\n          } else if (images[n].alt === \"Refresh\") {\n            images[n].src =\n              this.props.name === \"ColorblindMode\"\n                ? \"\"\n                : this.props.name === \"Darkmode\" ||\n                  this.props.name === \"VisionMode\"\n                  ? DarkmodeRefresh\n                  : LightmodeRefresh;\n          }\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <div className={\"Darkmode\"}>\n        <ButtonContainer className={this.state.theme + \" Settings\"}>\n          <ThemePicker\n            currTheme={this.state.theme}\n            className={\"Button\"}\n            replaceClasses={this.replaceClasses}\n            changeTheme={this.changeTheme}\n            name={\"Darkmode\"}\n          ></ThemePicker>\n          <ThemePicker\n            currTheme={this.state.theme}\n            className={\"Button\"}\n            replaceClasses={this.replaceClasses}\n            changeTheme={this.changeTheme}\n            name={\"Lightmode\"}\n          ></ThemePicker>\n          <ThemePicker\n            currTheme={this.state.theme}\n            className={\"Button\"}\n            replaceClasses={this.replaceClasses}\n            changeTheme={this.changeTheme}\n            name={\"ColorblindMode\"}\n          ></ThemePicker>\n          <ThemePicker\n            currTheme={this.state.theme}\n            className={\"Button\"}\n            replaceClasses={this.replaceClasses}\n            changeTheme={this.changeTheme}\n            name={\"VisionMode\"}\n          ></ThemePicker>\n        </ButtonContainer>\n        <div className={\"infoMessage hidden\"} id={\"infoMessage\"}></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}