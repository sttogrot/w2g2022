{"ast":null,"code":"/*\r\n\r\n create user should be done\r\n delete user should be done\r\nTODO get user state or figure out when user closes browser or leaves site\r\n*/\nimport React from 'react'; // collection of funktions relates to the controll of a user\n\nconst UserController = () => {\n  const createUser = input => {\n    const theUser = {\n      id,\n      name,\n      roomname\n    };\n    const url = 'https://gruppe18.toni-barth.com//users/'; // create user with getname \n\n    theUser.name = input; // get name from form \n    //post user\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // deklares intent, which data it wants\n      body: {\n        \"name\": theUser.name\n      }\n    }).then(theUser.id = response.id, console.log(response.id)); // should get the id and save it to theUser\n\n    return theUser; // to save it and use it for other methodes\n  };\n\n  const deleteUser = theUser => {\n    // as an alternative one could change it, so this funktion would resive the id directly\n    // delete request\n    fetch('https://gruppe18.toni-barth.com//users/:' + theUser.id, {\n      method: 'DELETE'\n    }); // set every data null\n\n    theUser.name = null;\n    theUser.id = null;\n    theUser.roomname = null;\n    return theUser; // implemented, can be disregarded or deletet\n  };\n};\n\n_c = UserController;\nexport default UserController;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserController\");","map":{"version":3,"names":["React","UserController","createUser","input","theUser","id","name","roomname","url","fetch","method","headers","body","then","response","console","log","deleteUser"],"sources":["D:/wum/w2g2022/w2g2022/src/components/Controller/UserController.js"],"sourcesContent":["/*\r\n\r\n create user should be done\r\n delete user should be done\r\nTODO get user state or figure out when user closes browser or leaves site\r\n*/\r\nimport React from 'react'\r\n\r\n// collection of funktions relates to the controll of a user\r\nconst UserController = () => {\r\n\r\n    const createUser = (input) => {\r\n        const theUser = { id, name, roomname} ;\r\n        const url = 'https://gruppe18.toni-barth.com//users/'\r\n        // create user with getname \r\n        theUser.name= input; // get name from form \r\n        //post user\r\n        fetch(url, {\r\n            method:'POST',\r\n            headers:{\"Content-Type\": \"application/json\"}, // deklares intent, which data it wants\r\n            body: {\"name\": theUser.name}  \r\n        }).then(theUser.id=response.id, console.log(response.id))                 // should get the id and save it to theUser\r\n\r\n        return theUser // to save it and use it for other methodes\r\n    }\r\n\r\n    const deleteUser = (theUser) => {                 // as an alternative one could change it, so this funktion would resive the id directly\r\n        // delete request\r\n        fetch('https://gruppe18.toni-barth.com//users/:'+theUser.id, {\r\n          method:'DELETE',\r\n      })\r\n      // set every data null\r\n      theUser.name= null;\r\n      theUser.id= null;\r\n      theUser.roomname= null;\r\n      return theUser          // implemented, can be disregarded or deletet\r\n    }\r\n}\r\n\r\nexport default UserController"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,cAAc,GAAG,MAAM;EAEzB,MAAMC,UAAU,GAAIC,KAAD,IAAW;IAC1B,MAAMC,OAAO,GAAG;MAAEC,EAAF;MAAMC,IAAN;MAAYC;IAAZ,CAAhB;IACA,MAAMC,GAAG,GAAG,yCAAZ,CAF0B,CAG1B;;IACAJ,OAAO,CAACE,IAAR,GAAcH,KAAd,CAJ0B,CAIL;IACrB;;IACAM,KAAK,CAACD,GAAD,EAAM;MACPE,MAAM,EAAC,MADA;MAEPC,OAAO,EAAC;QAAC,gBAAgB;MAAjB,CAFD;MAEuC;MAC9CC,IAAI,EAAE;QAAC,QAAQR,OAAO,CAACE;MAAjB;IAHC,CAAN,CAAL,CAIGO,IAJH,CAIQT,OAAO,CAACC,EAAR,GAAWS,QAAQ,CAACT,EAJ5B,EAIgCU,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACT,EAArB,CAJhC,EAN0B,CAUgD;;IAE1E,OAAOD,OAAP,CAZ0B,CAYX;EAClB,CAbD;;EAeA,MAAMa,UAAU,GAAIb,OAAD,IAAa;IAAkB;IAC9C;IACAK,KAAK,CAAC,6CAA2CL,OAAO,CAACC,EAApD,EAAwD;MAC3DK,MAAM,EAAC;IADoD,CAAxD,CAAL,CAF4B,CAK9B;;IACAN,OAAO,CAACE,IAAR,GAAc,IAAd;IACAF,OAAO,CAACC,EAAR,GAAY,IAAZ;IACAD,OAAO,CAACG,QAAR,GAAkB,IAAlB;IACA,OAAOH,OAAP,CAT8B,CASN;EACzB,CAVD;AAWH,CA5BD;;KAAMH,c;AA8BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}