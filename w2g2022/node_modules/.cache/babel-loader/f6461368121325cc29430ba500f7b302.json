{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\w2g2022\\\\w2g2022\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport './Navbar.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Startseite';\nimport About from './components/about';\nimport Help from './components/Help';\nimport Room from './components/Room';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  /* >>>>>     LATER FOR THEME PICKER     <<<<<<\r\n      replaceClasses(newClass) {\r\n    this.setState({\r\n      theme: newClass,\r\n    });\r\n    if (\r\n      newClass !== \"Lightmode\" &&\r\n      document.getElementsByClassName(\"Lightmode\").length > 0\r\n    ) {\r\n      let elements = document.getElementsByClassName(\"Lightmode\");\r\n      while (elements.length > 0) {\r\n        elements = document.getElementsByClassName(\"Lightmode\");\r\n        elements[0].classList.replace(\"Lightmode\", newClass);\r\n      }\r\n    } else if (\r\n      newClass !== \"Darkmode\" &&\r\n      document.getElementsByClassName(\"Darkmode\").length > 0\r\n    ) {\r\n      let elements = document.getElementsByClassName(\"Darkmode\");\r\n      while (elements.length > 0) {\r\n        elements = document.getElementsByClassName(\"Darkmode\");\r\n        elements[0].classList.replace(\"Darkmode\", newClass);\r\n      }\r\n    } else if (\r\n      newClass !== \"VisionMode\" &&\r\n      document.getElementsByClassName(\"VisionMode\").length > 0\r\n    ) {\r\n      let elements = document.getElementsByClassName(\"VisionMode\");\r\n      while (elements.length > 0) {\r\n        elements = document.getElementsByClassName(\"VisionMode\");\r\n        elements[0].classList.replace(\"VisionMode\", newClass);\r\n      }\r\n    } else if (\r\n      newClass !== \"ColorblindMode\" &&\r\n      document.getElementsByClassName(\"ColorblindMode\").length > 0\r\n    ) {\r\n      let elements = document.getElementsByClassName(\"ColorblindMode\");\r\n      while (elements.length > 0) {\r\n        elements = document.getElementsByClassName(\"ColorblindMode\");\r\n        elements[0].classList.replace(\"ColorblindMode\", newClass);\r\n      }\r\n    }\r\n  }\r\n  \r\n  changeTheme() {\r\n    this.props.replaceClasses(this.props.name);\r\n    document.body.style.background = this.backgrounds[this.props.name];\r\n    let containers = document.getElementsByClassName(\"container\");\r\n      for (let i = 0; i < containers.length; i++) {\r\n      let images = containers[i].getElementsByTagName(\"img\");\r\n      images[0].src =\r\n        this.props.name === \"Darkmode\" || this.props.name === \"VisionMode\"\r\n          ? DarkmodeSettings\r\n          : LightmodeSettings;\r\n      if (images.length > 1) {\r\n        for (let n = 1; n < images.length; n++) {\r\n          if (images[n].alt === \"Save\") {\r\n            images[n].src =\r\n              this.props.name === \"ColorblindMode\"\r\n                ? \"\"\r\n                : this.props.name === \"Darkmode\" ||\r\n                  this.props.name === \"VisionMode\"\r\n                  ? DarkmodeSave\r\n                  : LightmodeSave;\r\n          } else if (images[n].alt === \"Refresh\") {\r\n            images[n].src =\r\n              this.props.name === \"ColorblindMode\"\r\n                ? \"\"\r\n                : this.props.name === \"Darkmode\" ||\r\n                  this.props.name === \"VisionMode\"\r\n                  ? DarkmodeRefresh\r\n                  : LightmodeRefresh;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }*/\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            components: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/index\",\n            components: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Room\",\n            components: Room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            components: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Help\",\n            components: Help\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navbar","Home","About","Help","Room","App","Component","render"],"sources":["C:/Users/Tom/w2g2022/w2g2022/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport './Navbar.css'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './components/Startseite';\r\nimport About from './components/about';\r\nimport Help from './components/Help';\r\nimport Room from './components/Room';\r\n\r\nclass App extends React.Component {\r\n\r\n   \r\n    /* >>>>>     LATER FOR THEME PICKER     <<<<<<\r\n\r\n\r\n    replaceClasses(newClass) {\r\n      this.setState({\r\n        theme: newClass,\r\n      });\r\n      if (\r\n        newClass !== \"Lightmode\" &&\r\n        document.getElementsByClassName(\"Lightmode\").length > 0\r\n      ) {\r\n        let elements = document.getElementsByClassName(\"Lightmode\");\r\n        while (elements.length > 0) {\r\n          elements = document.getElementsByClassName(\"Lightmode\");\r\n          elements[0].classList.replace(\"Lightmode\", newClass);\r\n        }\r\n      } else if (\r\n        newClass !== \"Darkmode\" &&\r\n        document.getElementsByClassName(\"Darkmode\").length > 0\r\n      ) {\r\n        let elements = document.getElementsByClassName(\"Darkmode\");\r\n        while (elements.length > 0) {\r\n          elements = document.getElementsByClassName(\"Darkmode\");\r\n          elements[0].classList.replace(\"Darkmode\", newClass);\r\n        }\r\n      } else if (\r\n        newClass !== \"VisionMode\" &&\r\n        document.getElementsByClassName(\"VisionMode\").length > 0\r\n      ) {\r\n        let elements = document.getElementsByClassName(\"VisionMode\");\r\n        while (elements.length > 0) {\r\n          elements = document.getElementsByClassName(\"VisionMode\");\r\n          elements[0].classList.replace(\"VisionMode\", newClass);\r\n        }\r\n      } else if (\r\n        newClass !== \"ColorblindMode\" &&\r\n        document.getElementsByClassName(\"ColorblindMode\").length > 0\r\n      ) {\r\n        let elements = document.getElementsByClassName(\"ColorblindMode\");\r\n        while (elements.length > 0) {\r\n          elements = document.getElementsByClassName(\"ColorblindMode\");\r\n          elements[0].classList.replace(\"ColorblindMode\", newClass);\r\n        }\r\n      }\r\n    }\r\n    \r\n    changeTheme() {\r\n      this.props.replaceClasses(this.props.name);\r\n      document.body.style.background = this.backgrounds[this.props.name];\r\n      let containers = document.getElementsByClassName(\"container\");\r\n\r\n      for (let i = 0; i < containers.length; i++) {\r\n        let images = containers[i].getElementsByTagName(\"img\");\r\n        images[0].src =\r\n          this.props.name === \"Darkmode\" || this.props.name === \"VisionMode\"\r\n            ? DarkmodeSettings\r\n            : LightmodeSettings;\r\n        if (images.length > 1) {\r\n          for (let n = 1; n < images.length; n++) {\r\n            if (images[n].alt === \"Save\") {\r\n              images[n].src =\r\n                this.props.name === \"ColorblindMode\"\r\n                  ? \"\"\r\n                  : this.props.name === \"Darkmode\" ||\r\n                    this.props.name === \"VisionMode\"\r\n                    ? DarkmodeSave\r\n                    : LightmodeSave;\r\n            } else if (images[n].alt === \"Refresh\") {\r\n              images[n].src =\r\n                this.props.name === \"ColorblindMode\"\r\n                  ? \"\"\r\n                  : this.props.name === \"Darkmode\" ||\r\n                    this.props.name === \"VisionMode\"\r\n                    ? DarkmodeRefresh\r\n                    : LightmodeRefresh;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }*/\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navbar/>\r\n        <Routes>\r\n          <Route exact path=\"/\" components={Home} />\r\n          <Route exact path=\"/index\" components={Home} />\r\n          <Route exact path=\"/Room\" components={Room} />\r\n          <Route exact path=\"/about\" components={About} />\r\n          <Route exact path=\"/Help\" components={Help} />\r\n        </Routes>\r\n      </Router>\r\n    </div >\r\n  );\r\n}\r\n}\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,cAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;EAG9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAWAC,MAAM,GAAG;IACP,oBACE;MAAA,uBACE,QAAC,MAAD;QAAA,wBACE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,GAAlB;YAAsB,UAAU,EAAEN;UAAlC;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,QAAlB;YAA2B,UAAU,EAAEA;UAAvC;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,OAAlB;YAA0B,UAAU,EAAEG;UAAtC;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,QAAlB;YAA2B,UAAU,EAAEF;UAAvC;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,OAAlB;YAA0B,UAAU,EAAEC;UAAtC;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAcD;;AAzGiC;;AA2GlC,eAAeE,GAAf"},"metadata":{},"sourceType":"module"}