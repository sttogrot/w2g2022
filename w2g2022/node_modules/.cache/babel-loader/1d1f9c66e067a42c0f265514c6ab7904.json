{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nexport const useFetch = () => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null); //const getThing = ((url) =>{\n\n  useEffect(() => {\n    fetch(url, {\n      method: 'GET'\n    }).then(response => {\n      //gets data\n      return response.json(); //turns data in to a readable format\n    }).then(data => {\n      // takes data and saves it as a state           \n      setData(data);\n    });\n  }); //});\n};\n\n_s(useFetch, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");","map":{"version":3,"names":["React","useState","useEffect","useFetch","data","setData","error","setError","fetch","url","method","then","response","json"],"sources":["D:/wum/w2g2022/w2g2022/src/components/useFetch.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const useFetch = () => {\r\n    const [data, setData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    //const getThing = ((url) =>{\r\n      useEffect(() =>{\r\n        fetch(url, {method:'GET'})\r\n        .then(response => {             //gets data\r\n          return response.json();       //turns data in to a readable format\r\n        })\r\n        .then(data => {                 // takes data and saves it as a state           \r\n          setData(data)\r\n        })\r\n      });\r\n    //});\r\n  \r\n   \r\n  }\r\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC,CAF0B,CAI1B;;EACEC,SAAS,CAAC,MAAK;IACbM,KAAK,CAACC,GAAD,EAAM;MAACC,MAAM,EAAC;IAAR,CAAN,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;MAAc;MAC9B,OAAOA,QAAQ,CAACC,IAAT,EAAP,CADgB,CACc;IAC/B,CAHD,EAICF,IAJD,CAIMP,IAAI,IAAI;MAAkB;MAC9BC,OAAO,CAACD,IAAD,CAAP;IACD,CAND;EAOD,CARQ,CAAT,CALwB,CAc1B;AAGD,CAjBI;;GAAMD,Q"},"metadata":{},"sourceType":"module"}