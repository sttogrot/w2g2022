{"ast":null,"code":"/*\r\n\r\n create Room should be done\r\n delete Room should be done\r\n join room should be done\r\n leave room should be done\r\n\r\nTODO Userlist, how to store and display\r\nTODO Roomlist, same problem as before\r\n*/\nimport React from 'react'; // collection of funktions related to the controll of a room\n\nexport const createRoom = theUser => {\n  const url = 'https://gruppe18.toni-barth.com/rooms/'; //put request, creation of room\n\n  fetch(url, {\n    method: 'POST'\n  }) //take respons, its the name of new room\n  .then(response => {\n    return response.json();\n  }).then(data => {\n    window.sessionStorage.setItem(\"room\", data.name);\n  }); // put user into room\n\n  fetch(url + ':' + theUser.roomname + '/users', {\n    method: 'PUT',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"user\": theUser.id\n    })\n  });\n  return theUser;\n};\nexport const deleteRoom = name => {\n  // delete room with roomname\n  fetch('https://gruppe18.toni-barth.com/rooms/' + name, {\n    method: 'DELETE'\n  });\n};\nexport const joinRoom = (theUser, name) => {\n  // get roomname and user id put them in url\n  fetch('https://gruppe18.toni-barth.com/rooms/' + name + '/users', {\n    method: 'PUT',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"user\": theUser.id\n    })\n  }); //update theUser\n\n  sessionStorage.removeItem('roomname');\n  window.sessionStorage.setItem(\"room\", name);\n  return theUser;\n};\nexport const leaveRoom = (id, roomname) => {\n  id = JSON.stringify(id); // delete user from room\n\n  fetch('https://gruppe18.toni-barth.com/rooms/:' + roomname + '/users', {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"user\": id\n    })\n  }); //update theUser\n\n  sessionStorage.removeItem('roomname');\n};\nexport const displayUserlist = name => {\n  fetch('https://gruppe18.toni-barth.com/rooms/:' + name + '/users', {\n    method: 'GET'\n  }).then(respons => {\n    respons.json();\n  }).then(data => {\n    console.log(data);\n  }); // TODO\n};","map":{"version":3,"names":["React","createRoom","theUser","url","fetch","method","then","response","json","data","window","sessionStorage","setItem","name","roomname","headers","body","JSON","stringify","id","deleteRoom","joinRoom","removeItem","leaveRoom","displayUserlist","respons","console","log"],"sources":["D:/wum/w2g2022/w2g2022/src/components/Controller/RoomController.js"],"sourcesContent":["/*\r\n\r\n create Room should be done\r\n delete Room should be done\r\n join room should be done\r\n leave room should be done\r\n\r\nTODO Userlist, how to store and display\r\nTODO Roomlist, same problem as before\r\n*/\r\n\r\nimport React from 'react'\r\n\r\n\r\n// collection of funktions related to the controll of a room\r\n\r\n\r\n    export const createRoom =(theUser) => {\r\n        const url = 'https://gruppe18.toni-barth.com/rooms/'\r\n        //put request, creation of room\r\n        fetch(url, {\r\n            method:'POST'               \r\n        })\r\n        //take respons, its the name of new room\r\n        .then( response => {\r\n           return response.json()})\r\n        .then (data => {window.sessionStorage.setItem(\"room\", data.name);\r\n        })  \r\n        // put user into room\r\n        fetch(url+':'+theUser.roomname+'/users', {\r\n        method:'PUT',\r\n        headers:{\"Content-Type\": \"application/json\"},\r\n        body:  JSON.stringify({ \"user\": theUser.id } )\r\n        })\r\n        return theUser\r\n    }\r\n    export const deleteRoom = (name) => {\r\n        // delete room with roomname\r\n        fetch('https://gruppe18.toni-barth.com/rooms/'+name, {\r\n          method:'DELETE',\r\n      })\r\n    }\r\n    export const joinRoom = (theUser, name) => {\r\n        // get roomname and user id put them in url\r\n        fetch('https://gruppe18.toni-barth.com/rooms/'+name+'/users', {\r\n            method:'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body:  JSON.stringify({\"user\": theUser.id})\r\n        })\r\n        //update theUser\r\n        sessionStorage.removeItem('roomname');\r\n        window.sessionStorage.setItem(\"room\", name)\r\n        return theUser\r\n    }\r\n    export const leaveRoom = (id, roomname) => {\r\n        id=JSON.stringify(id)\r\n        // delete user from room\r\n        fetch('https://gruppe18.toni-barth.com/rooms/:'+roomname+'/users', {\r\n          method:'DELETE',\r\n          headers:{\"Content-Type\": \"application/json\"},\r\n          body:  JSON.stringify({\"user\": id})\r\n      })\r\n        //update theUser\r\n        sessionStorage.removeItem('roomname');\r\n    }\r\n    export const displayUserlist = (name) => {\r\n        fetch('https://gruppe18.toni-barth.com/rooms/:'+name+'/users', {\r\n            method:'GET'\r\n        }).then(  respons =>  {respons.json()}).then(data => {console.log(data)}) // TODO\r\n    }\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AAGI,OAAO,MAAMC,UAAU,GAAGC,OAAD,IAAa;EAClC,MAAMC,GAAG,GAAG,wCAAZ,CADkC,CAElC;;EACAC,KAAK,CAACD,GAAD,EAAM;IACPE,MAAM,EAAC;EADA,CAAN,CAAL,CAGA;EAHA,CAICC,IAJD,CAIOC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACC,IAAT,EAAP;EAAuB,CAL1B,EAMCF,IAND,CAMOG,IAAI,IAAI;IAACC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,EAAsCH,IAAI,CAACI,IAA3C;EACf,CAPD,EAHkC,CAWlC;;EACAT,KAAK,CAACD,GAAG,GAAC,GAAJ,GAAQD,OAAO,CAACY,QAAhB,GAAyB,QAA1B,EAAoC;IACzCT,MAAM,EAAC,KADkC;IAEzCU,OAAO,EAAC;MAAC,gBAAgB;IAAjB,CAFiC;IAGzCC,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;MAAE,QAAQhB,OAAO,CAACiB;IAAlB,CAAf;EAHkC,CAApC,CAAL;EAKA,OAAOjB,OAAP;AACH,CAlBM;AAmBP,OAAO,MAAMkB,UAAU,GAAIP,IAAD,IAAU;EAChC;EACAT,KAAK,CAAC,2CAAyCS,IAA1C,EAAgD;IACnDR,MAAM,EAAC;EAD4C,CAAhD,CAAL;AAGH,CALM;AAMP,OAAO,MAAMgB,QAAQ,GAAG,CAACnB,OAAD,EAAUW,IAAV,KAAmB;EACvC;EACAT,KAAK,CAAC,2CAAyCS,IAAzC,GAA8C,QAA/C,EAAyD;IAC1DR,MAAM,EAAC,KADmD;IAE1DU,OAAO,EAAC;MAAC,gBAAgB;IAAjB,CAFkD;IAG1DC,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;MAAC,QAAQhB,OAAO,CAACiB;IAAjB,CAAf;EAHmD,CAAzD,CAAL,CAFuC,CAOvC;;EACAR,cAAc,CAACW,UAAf,CAA0B,UAA1B;EACAZ,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,EAAsCC,IAAtC;EACA,OAAOX,OAAP;AACH,CAXM;AAYP,OAAO,MAAMqB,SAAS,GAAG,CAACJ,EAAD,EAAKL,QAAL,KAAkB;EACvCK,EAAE,GAACF,IAAI,CAACC,SAAL,CAAeC,EAAf,CAAH,CADuC,CAEvC;;EACAf,KAAK,CAAC,4CAA0CU,QAA1C,GAAmD,QAApD,EAA8D;IACjET,MAAM,EAAC,QAD0D;IAEjEU,OAAO,EAAC;MAAC,gBAAgB;IAAjB,CAFyD;IAGjEC,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;MAAC,QAAQC;IAAT,CAAf;EAH0D,CAA9D,CAAL,CAHuC,CAQvC;;EACAR,cAAc,CAACW,UAAf,CAA0B,UAA1B;AACH,CAVM;AAWP,OAAO,MAAME,eAAe,GAAIX,IAAD,IAAU;EACrCT,KAAK,CAAC,4CAA0CS,IAA1C,GAA+C,QAAhD,EAA0D;IAC3DR,MAAM,EAAC;EADoD,CAA1D,CAAL,CAEGC,IAFH,CAEUmB,OAAO,IAAK;IAACA,OAAO,CAACjB,IAAR;EAAe,CAFtC,EAEwCF,IAFxC,CAE6CG,IAAI,IAAI;IAACiB,OAAO,CAACC,GAAR,CAAYlB,IAAZ;EAAkB,CAFxE,EADqC,CAGqC;AAC7E,CAJM"},"metadata":{},"sourceType":"module"}