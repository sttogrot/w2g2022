{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nexport const useFetch = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const getThing = url => {\n    _s();\n\n    useEffect(() => {\n      fetch(url, {\n        method: 'GET'\n      }).then(response => {\n        //gets data\n        if (!response.ok) {\n          //if cant fetch/resource is faulty\n          throw Error('could not fetch');\n        }\n\n        return response.json(); //turns data in to a readable format\n      }).then(data => {\n        // takes data and saves it as a state           \n        setData(data);\n        setLoading(false);\n      }).catch(error => {\n        console.log(error.massage);\n        setError(error.massage);\n      });\n    });\n  };\n\n  _s(getThing, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n/**\r\n *  { loading && <div>loading...</div>} // only when loading is true visible\r\n */\n\n_s2(useFetch, \"3ecZsCYHHXBSzmS6pSxHlFpkn6w=\");","map":{"version":3,"names":["React","useState","useEffect","useFetch","data","setData","loading","setLoading","error","setError","getThing","url","fetch","method","then","response","ok","Error","json","catch","console","log","massage"],"sources":["D:/wum/w2g2022/w2g2022/src/components/useFetch.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const useFetch = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const getThing = ((url) =>{\r\n      \r\n    useEffect(() =>{\r\n      fetch(url, {method:'GET'})\r\n       .then(response => {             //gets data\r\n          if(!response.ok){            //if cant fetch/resource is faulty\r\n            throw Error('could not fetch')\r\n          }\r\n         return response.json();       //turns data in to a readable format\r\n       })\r\n       .then(data => {                 // takes data and saves it as a state           \r\n         setData(data);\r\n         setLoading(false);\r\n       })\r\n       .catch((error) => {\r\n        console.log(error.massage);\r\n        setError(error.massage);\r\n       })\r\n     });\r\n   });\r\n  \r\n   \r\n  }\r\n\r\n  /**\r\n   *  { loading && <div>loading...</div>} // only when loading is true visible\r\n   */"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAAA;;EAC5B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMS,QAAQ,GAAKC,GAAD,IAAQ;IAAA;;IAExBT,SAAS,CAAC,MAAK;MACbU,KAAK,CAACD,GAAD,EAAM;QAACE,MAAM,EAAC;MAAR,CAAN,CAAL,CACEC,IADF,CACOC,QAAQ,IAAI;QAAc;QAC7B,IAAG,CAACA,QAAQ,CAACC,EAAb,EAAgB;UAAa;UAC3B,MAAMC,KAAK,CAAC,iBAAD,CAAX;QACD;;QACF,OAAOF,QAAQ,CAACG,IAAT,EAAP,CAJgB,CAIc;MAC/B,CANF,EAOEJ,IAPF,CAOOV,IAAI,IAAI;QAAkB;QAC9BC,OAAO,CAACD,IAAD,CAAP;QACAG,UAAU,CAAC,KAAD,CAAV;MACD,CAVF,EAWEY,KAXF,CAWSX,KAAD,IAAW;QACjBY,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACc,OAAlB;QACAb,QAAQ,CAACD,KAAK,CAACc,OAAP,CAAR;MACA,CAdF;IAeA,CAhBO,CAAT;EAiBA,CAnBF;;EAL4B,GAKtBZ,QALsB;AA2B3B,CA3BI;AA6BL;AACF;AACA;;IA/BaP,Q"},"metadata":{},"sourceType":"module"}