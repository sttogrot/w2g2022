{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\w2g2022\\\\w2g2022\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './App.css';\nimport './Navbar.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './components/Startseite';\nimport About from './components/about';\nimport Help from './components/Help';\nimport Room from './components/Room';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentUser: {\n        userName: \"\",\n        userID: -1\n      },\n      users: {},\n      theme: \"Darkmode\"\n    };\n    this.updateCurrentUserInfo = this.updateCurrentUserInfo.bind(this); // This updates the client side information of the currently logged in user\n\n    this.getUsers = this.getUsers.bind(this); // This gets all user related information from the server side\n\n    this.getUserInfo = this.getUserInfo.bind(this); // This gets the name and id of any specific user;\n    // information is taken from a client side copy\n\n    this.getCurrentUserInfo = this.getCurrentUserInfo.bind(this); // This gets the name and id of the currently logged in user;\n    // information is taken from a client side copy\n\n    this.handleErrors = this.handleErrors.bind(this); // This prints out errors to the console and shows an error message to the user;\n    // Used for network errors (specifically CORS errors) only currently.\n\n    this.replaceClasses = this.replaceClasses.bind(this); // This replaces the theme related classes\n    // of all affected elements with one specific theme class\n\n    this.loginUser = this.loginUser.bind(this); // This logs the user into an existing or newly created account\n    // depending on whether or not the account previously existed\n\n    this.displayInfo = this.displayInfo.bind(this); // This will display info of a given type for a certain time in a specific text box\n    // This is because the initial theme is Darkmode\n\n    document.body.style.backgroundColor = \"#5860a8\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/index\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Room\",\n            component: Room\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/Help\",\n            component: Help\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navbar","Home","About","Help","Room","App","Component","constructor","props","state","currentUser","userName","userID","users","theme","updateCurrentUserInfo","bind","getUsers","getUserInfo","getCurrentUserInfo","handleErrors","replaceClasses","loginUser","displayInfo","document","body","style","backgroundColor","render"],"sources":["C:/Users/Tom/w2g2022/w2g2022/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport './Navbar.css'\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/Navbar';\r\nimport Home from './components/Startseite';\r\nimport About from './components/about';\r\nimport Help from './components/Help';\r\nimport Room from './components/Room';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentUser: {\r\n        userName: \"\",\r\n        userID: -1,\r\n      },\r\n      \r\n      users: {},\r\n      theme: \"Darkmode\",\r\n      \r\n    };\r\n\r\n    \r\n   \r\n  \r\n    this.updateCurrentUserInfo = this.updateCurrentUserInfo.bind(this); // This updates the client side information of the currently logged in user\r\n    this.getUsers = this.getUsers.bind(this); // This gets all user related information from the server side\r\n    this.getUserInfo = this.getUserInfo.bind(this); // This gets the name and id of any specific user;\r\n    // information is taken from a client side copy\r\n    this.getCurrentUserInfo = this.getCurrentUserInfo.bind(this); // This gets the name and id of the currently logged in user;\r\n    // information is taken from a client side copy\r\n    this.handleErrors = this.handleErrors.bind(this); // This prints out errors to the console and shows an error message to the user;\r\n    // Used for network errors (specifically CORS errors) only currently.\r\n    this.replaceClasses = this.replaceClasses.bind(this); // This replaces the theme related classes\r\n    // of all affected elements with one specific theme class\r\n    this.loginUser = this.loginUser.bind(this); // This logs the user into an existing or newly created account\r\n    // depending on whether or not the account previously existed\r\n    this.displayInfo = this.displayInfo.bind(this); // This will display info of a given type for a certain time in a specific text box\r\n    // This is because the initial theme is Darkmode\r\n    document.body.style.backgroundColor = \"#5860a8\";\r\n  }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n      <Router>\r\n        <Navbar></Navbar>\r\n        <Routes>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/index\" component={Home} />\r\n          <Route exact path=\"/Room\" component={Room} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/Help\" component={Help} />\r\n        </Routes>\r\n      </Router>\r\n    </div >\r\n  );\r\n  }\r\n}\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,cAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;EAEhCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,WAAW,EAAE;QACXC,QAAQ,EAAE,EADC;QAEXC,MAAM,EAAE,CAAC;MAFE,CADF;MAMXC,KAAK,EAAE,EANI;MAOXC,KAAK,EAAE;IAPI,CAAb;IAcA,KAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAA7B,CAhBiB,CAgBmD;;IACpE,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB,CAjBiB,CAiByB;;IAC1C,KAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB,CAlBiB,CAkB+B;IAChD;;IACA,KAAKG,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBH,IAAxB,CAA6B,IAA7B,CAA1B,CApBiB,CAoB6C;IAC9D;;IACA,KAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB,CAtBiB,CAsBiC;IAClD;;IACA,KAAKK,cAAL,GAAsB,KAAKA,cAAL,CAAoBL,IAApB,CAAyB,IAAzB,CAAtB,CAxBiB,CAwBqC;IACtD;;IACA,KAAKM,SAAL,GAAiB,KAAKA,SAAL,CAAeN,IAAf,CAAoB,IAApB,CAAjB,CA1BiB,CA0B2B;IAC5C;;IACA,KAAKO,WAAL,GAAmB,KAAKA,WAAL,CAAiBP,IAAjB,CAAsB,IAAtB,CAAnB,CA5BiB,CA4B+B;IAChD;;IACAQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;EACD;;EAQDC,MAAM,GAAG;IACP,oBACA;MAAA,uBACE,QAAC,MAAD;QAAA,wBACE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,GAAlB;YAAsB,SAAS,EAAE3B;UAAjC;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,QAAlB;YAA2B,SAAS,EAAEA;UAAtC;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,OAAlB;YAA0B,SAAS,EAAEG;UAArC;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,QAAlB;YAA2B,SAAS,EAAEF;UAAtC;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,OAAlB;YAA0B,SAAS,EAAEC;UAArC;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADA;EAcD;;AAxD+B;;AA0DlC,eAAeE,GAAf"},"metadata":{},"sourceType":"module"}