{"ast":null,"code":"/*\r\n\r\n create Room should be done\r\n delete Room should be done\r\n join room should be done\r\n leave room should be done\r\n\r\nTODO Userlist, how to store and display\r\nTODO Roomlist, same problem as before\r\n*/\nimport React from 'react'; // collection of funktions related to the controll of a room\n\nexport const createRoom = () => {\n  const url = 'https://gruppe18.toni-barth.com/rooms/';\n  const name = ''; //put request, creation of room\n\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }) //take respons, its the name of new room\n  .then(response => {\n    return response.json();\n  }).then(data => {\n    joinRoom(data.name);\n  }).then(data => {});\n  return null;\n};\nexport const joinRoom = name => {\n  // get roomname and user id put them in url\n  fetch('https://gruppe18.toni-barth.com/rooms/' + name + '/users', {\n    method: 'PUT',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"user\": sessionStorage.getItem('id')\n    })\n  });\n  window.sessionStorage.setItem(\"roomname\", name);\n  return name;\n};\nexport const leaveRoom = roomname => {\n  // delete user from room\n  fetch('https://gruppe18.toni-barth.com/rooms/' + roomname + '/users', {\n    method: 'DELETE',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"user\": sessionStorage.getItem('id')\n    })\n  }); //update theUser\n\n  sessionStorage.removeItem('roomname');\n};\nexport const displayUserlist = name => {\n  fetch('https://gruppe18.toni-barth.com/rooms/' + name + '/users', {\n    method: 'GET'\n  }).then(respons => {\n    return respons.json();\n  }).then(data => {\n    console.log(data);\n  }); // TODO\n};","map":{"version":3,"names":["React","createRoom","url","name","fetch","method","headers","then","response","json","data","joinRoom","body","JSON","stringify","sessionStorage","getItem","window","setItem","leaveRoom","roomname","removeItem","displayUserlist","respons","console","log"],"sources":["D:/wum/w2g2022/w2g2022/src/components/Controller/RoomController.js"],"sourcesContent":["/*\r\n\r\n create Room should be done\r\n delete Room should be done\r\n join room should be done\r\n leave room should be done\r\n\r\nTODO Userlist, how to store and display\r\nTODO Roomlist, same problem as before\r\n*/\r\n\r\nimport React from 'react'\r\n\r\n\r\n// collection of funktions related to the controll of a room\r\n\r\n\r\n    export const createRoom =() => {\r\n        const url = 'https://gruppe18.toni-barth.com/rooms/'\r\n        const name =''\r\n        //put request, creation of room\r\n        fetch(url, {\r\n            method:'POST' ,\r\n            headers:{\"Content-Type\": \"application/json\"},             \r\n        })\r\n        //take respons, its the name of new room\r\n        .then( response => {\r\n           return response.json()})\r\n        .then (data => { joinRoom(data.name)\r\n        }) .then(data => { \r\n        })\r\n        return null\r\n    }\r\n    export const joinRoom = (name) => {\r\n        // get roomname and user id put them in url\r\n        fetch('https://gruppe18.toni-barth.com/rooms/'+ name +'/users', {\r\n            method:'PUT',\r\n            headers:{\"Content-Type\": \"application/json\"},\r\n            body:  JSON.stringify({\"user\": sessionStorage.getItem('id')})\r\n        })\r\n        window.sessionStorage.setItem(\"roomname\", name)\r\n        return name\r\n    }\r\n    export const leaveRoom = (roomname) => {\r\n        // delete user from room\r\n        fetch('https://gruppe18.toni-barth.com/rooms/'+roomname+'/users', {\r\n          method:'DELETE',\r\n          headers:{\"Content-Type\": \"application/json\"},\r\n          body:  JSON.stringify({\"user\": sessionStorage.getItem('id')})\r\n      })\r\n        //update theUser\r\n        sessionStorage.removeItem('roomname');\r\n    }\r\n    export const displayUserlist = (name) => {\r\n        fetch('https://gruppe18.toni-barth.com/rooms/'+name+'/users', {\r\n            method:'GET'\r\n        }).then(  respons =>  {return respons.json()}).then(data => {console.log(data)}) // TODO\r\n    }\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAGA;;AAGI,OAAO,MAAMC,UAAU,GAAE,MAAM;EAC3B,MAAMC,GAAG,GAAG,wCAAZ;EACA,MAAMC,IAAI,GAAE,EAAZ,CAF2B,CAG3B;;EACAC,KAAK,CAACF,GAAD,EAAM;IACPG,MAAM,EAAC,MADA;IAEPC,OAAO,EAAC;MAAC,gBAAgB;IAAjB;EAFD,CAAN,CAAL,CAIA;EAJA,CAKCC,IALD,CAKOC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACC,IAAT,EAAP;EAAuB,CAN1B,EAOCF,IAPD,CAOOG,IAAI,IAAI;IAAEC,QAAQ,CAACD,IAAI,CAACP,IAAN,CAAR;EAChB,CARD,EAQII,IARJ,CAQSG,IAAI,IAAI,CAChB,CATD;EAUA,OAAO,IAAP;AACH,CAfM;AAgBP,OAAO,MAAMC,QAAQ,GAAIR,IAAD,IAAU;EAC9B;EACAC,KAAK,CAAC,2CAA0CD,IAA1C,GAAgD,QAAjD,EAA2D;IAC5DE,MAAM,EAAC,KADqD;IAE5DC,OAAO,EAAC;MAAC,gBAAgB;IAAjB,CAFoD;IAG5DM,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;MAAC,QAAQC,cAAc,CAACC,OAAf,CAAuB,IAAvB;IAAT,CAAf;EAHqD,CAA3D,CAAL;EAKAC,MAAM,CAACF,cAAP,CAAsBG,OAAtB,CAA8B,UAA9B,EAA0Cf,IAA1C;EACA,OAAOA,IAAP;AACH,CATM;AAUP,OAAO,MAAMgB,SAAS,GAAIC,QAAD,IAAc;EACnC;EACAhB,KAAK,CAAC,2CAAyCgB,QAAzC,GAAkD,QAAnD,EAA6D;IAChEf,MAAM,EAAC,QADyD;IAEhEC,OAAO,EAAC;MAAC,gBAAgB;IAAjB,CAFwD;IAGhEM,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;MAAC,QAAQC,cAAc,CAACC,OAAf,CAAuB,IAAvB;IAAT,CAAf;EAHyD,CAA7D,CAAL,CAFmC,CAOnC;;EACAD,cAAc,CAACM,UAAf,CAA0B,UAA1B;AACH,CATM;AAUP,OAAO,MAAMC,eAAe,GAAInB,IAAD,IAAU;EACrCC,KAAK,CAAC,2CAAyCD,IAAzC,GAA8C,QAA/C,EAAyD;IAC1DE,MAAM,EAAC;EADmD,CAAzD,CAAL,CAEGE,IAFH,CAEUgB,OAAO,IAAK;IAAC,OAAOA,OAAO,CAACd,IAAR,EAAP;EAAsB,CAF7C,EAE+CF,IAF/C,CAEoDG,IAAI,IAAI;IAACc,OAAO,CAACC,GAAR,CAAYf,IAAZ;EAAkB,CAF/E,EADqC,CAG4C;AACpF,CAJM"},"metadata":{},"sourceType":"module"}